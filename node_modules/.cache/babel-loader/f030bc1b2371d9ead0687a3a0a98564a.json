{"ast":null,"code":"var _jsxFileName = \"/Users/sinsang-eun/Documents/Github/FIGLE/src/views/examples/pagination.jsx\";\nimport React from 'react';\nimport _ from 'lodash';\n/* State를 갖지 않고 값 반환만 하는 컴포넌트이므로 함수형으로 구현 */\n\nvar Pagination = function Pagination(props) {\n  var itemsCount = props.itemsCount,\n      pageSize = props.pageSize; // 각각 아이템(영화목록) 개수, 한 페이지에 보여줄 아이템(영화목록) 개수\n\n  var pageCount = Math.ceil(itemsCount / pageSize); // 몇 페이지가 필요한지 계산\n\n  if (pageCount === 1) return null; // 1페이지 뿐이라면 페이지 수를 보여주지 않음\n\n  var pages = _.range(1, pageCount + 1); // 마지막 페이지에 보여줄 컨텐츠를 위해 +1, https://lodash.com/docs/#range 참고\n\n\n  return React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \" \", React.createElement(\"ul\", {\n    className: \"pagination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, pages.map(function (page) {\n    return React.createElement(\"li\", {\n      key: page,\n      className: \"page-item\",\n      style: {\n        cursor: \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"page-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, page));\n  })));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/sinsang-eun/Documents/Github/FIGLE/src/views/examples/pagination.jsx"],"names":["React","_","Pagination","props","itemsCount","pageSize","pageCount","Math","ceil","pages","range","map","page","cursor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA,MAClBC,UADkB,GACOD,KADP,CAClBC,UADkB;AAAA,MACNC,QADM,GACOF,KADP,CACNE,QADM,EACc;;AACxC,MAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUJ,UAAU,GAAGC,QAAvB,CAAlB,CAF0B,CAE0B;;AAEpD,MAAIC,SAAS,KAAK,CAAlB,EAAqB,OAAO,IAAP,CAJK,CAIQ;;AAElC,MAAMG,KAAK,GAAGR,CAAC,CAACS,KAAF,CAAQ,CAAR,EAAWJ,SAAS,GAAG,CAAvB,CAAd,CAN0B,CAMe;;;AAEzC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI;AAAA,WACX;AAAI,MAAA,GAAG,EAAEA,IAAT;AAAe,MAAA,SAAS,EAAC,WAAzB;AAAqC,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BD,IAA1B,CADJ,CADW;AAAA,GAAd,CADL,CADJ,CADJ;AAWH,CAnBD;;AAqBA,eAAeV,UAAf","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\n/* State를 갖지 않고 값 반환만 하는 컴포넌트이므로 함수형으로 구현 */\nconst Pagination = (props) => {\n    const { itemsCount, pageSize } = props; // 각각 아이템(영화목록) 개수, 한 페이지에 보여줄 아이템(영화목록) 개수\n    const pageCount = Math.ceil(itemsCount / pageSize); // 몇 페이지가 필요한지 계산\n\n    if (pageCount === 1) return null; // 1페이지 뿐이라면 페이지 수를 보여주지 않음\n\n    const pages = _.range(1, pageCount + 1); // 마지막 페이지에 보여줄 컨텐츠를 위해 +1, https://lodash.com/docs/#range 참고\n\n    return (\n        <nav> {/* VSCode 입력: nav>ul.pagination>li.page-item>a.page-link */}\n            <ul className=\"pagination\">\n                {pages.map(page => (\n                    <li key={page} className=\"page-item\" style={{ cursor: \"pointer\" }}>\n                        <a className=\"page-link\">{page}</a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n}\n\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}